/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package OrderSvc.model.impl;

import OrderSvc.model.Order;
import OrderSvc.model.OrderModel;
import OrderSvc.model.OrderSoap;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Order service. Represents a row in the &quot;master_Order&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link OrderModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link OrderImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see OrderImpl
 * @see Order
 * @see OrderModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class OrderModelImpl extends BaseModelImpl<Order> implements OrderModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a order model instance should use the {@link Order} interface instead.
	 */
	public static final String TABLE_NAME = "master_Order";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "id_order", Types.VARCHAR },
			{ "total_harga", Types.BIGINT },
			{ "tanggal_pemesanan", Types.TIMESTAMP },
			{ "tanggal_ekspetasi_pengiriman", Types.TIMESTAMP },
			{ "status_order", Types.VARCHAR },
			{ "status_pembayaran_keseluruhan", Types.VARCHAR },
			{ "status_pengiriman_keseluruhan", Types.VARCHAR },
			{ "catatan", Types.VARCHAR },
			{ "create_date", Types.TIMESTAMP },
			{ "modified_date", Types.TIMESTAMP },
			{ "id_metode_pembayaran", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("id_order", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("total_harga", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("tanggal_pemesanan", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("tanggal_ekspetasi_pengiriman", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("status_order", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("status_pembayaran_keseluruhan", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("status_pengiriman_keseluruhan", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("catatan", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("create_date", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modified_date", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("id_metode_pembayaran", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table master_Order (uuid_ VARCHAR(75) null,id_order VARCHAR(75) not null primary key,total_harga LONG,tanggal_pemesanan DATE null,tanggal_ekspetasi_pengiriman DATE null,status_order VARCHAR(75) null,status_pembayaran_keseluruhan VARCHAR(75) null,status_pengiriman_keseluruhan VARCHAR(75) null,catatan VARCHAR(75) null,create_date DATE null,modified_date DATE null,id_metode_pembayaran VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table master_Order";
	public static final String ORDER_BY_JPQL = " ORDER BY order_.id_order ASC";
	public static final String ORDER_BY_SQL = " ORDER BY master_Order.id_order ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(OrderSvc.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.OrderSvc.model.Order"), true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(OrderSvc.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.OrderSvc.model.Order"), true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(OrderSvc.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.OrderSvc.model.Order"),
			true);
	public static final long UUID_COLUMN_BITMASK = 1L;
	public static final long ID_ORDER_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Order toModel(OrderSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Order model = new OrderImpl();

		model.setUuid(soapModel.getUuid());
		model.setId_order(soapModel.getId_order());
		model.setTotal_harga(soapModel.getTotal_harga());
		model.setTanggal_pemesanan(soapModel.getTanggal_pemesanan());
		model.setTanggal_ekspetasi_pengiriman(soapModel.getTanggal_ekspetasi_pengiriman());
		model.setStatus_order(soapModel.getStatus_order());
		model.setStatus_pembayaran_keseluruhan(soapModel.getStatus_pembayaran_keseluruhan());
		model.setStatus_pengiriman_keseluruhan(soapModel.getStatus_pengiriman_keseluruhan());
		model.setCatatan(soapModel.getCatatan());
		model.setCreate_date(soapModel.getCreate_date());
		model.setModified_date(soapModel.getModified_date());
		model.setId_metode_pembayaran(soapModel.getId_metode_pembayaran());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Order> toModels(OrderSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Order> models = new ArrayList<Order>(soapModels.length);

		for (OrderSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(OrderSvc.service.util.ServiceProps.get(
				"lock.expiration.time.OrderSvc.model.Order"));

	public OrderModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _id_order;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setId_order(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id_order;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return Order.class;
	}

	@Override
	public String getModelClassName() {
		return Order.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("id_order", getId_order());
		attributes.put("total_harga", getTotal_harga());
		attributes.put("tanggal_pemesanan", getTanggal_pemesanan());
		attributes.put("tanggal_ekspetasi_pengiriman",
			getTanggal_ekspetasi_pengiriman());
		attributes.put("status_order", getStatus_order());
		attributes.put("status_pembayaran_keseluruhan",
			getStatus_pembayaran_keseluruhan());
		attributes.put("status_pengiriman_keseluruhan",
			getStatus_pengiriman_keseluruhan());
		attributes.put("catatan", getCatatan());
		attributes.put("create_date", getCreate_date());
		attributes.put("modified_date", getModified_date());
		attributes.put("id_metode_pembayaran", getId_metode_pembayaran());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		String id_order = (String)attributes.get("id_order");

		if (id_order != null) {
			setId_order(id_order);
		}

		Long total_harga = (Long)attributes.get("total_harga");

		if (total_harga != null) {
			setTotal_harga(total_harga);
		}

		Date tanggal_pemesanan = (Date)attributes.get("tanggal_pemesanan");

		if (tanggal_pemesanan != null) {
			setTanggal_pemesanan(tanggal_pemesanan);
		}

		Date tanggal_ekspetasi_pengiriman = (Date)attributes.get(
				"tanggal_ekspetasi_pengiriman");

		if (tanggal_ekspetasi_pengiriman != null) {
			setTanggal_ekspetasi_pengiriman(tanggal_ekspetasi_pengiriman);
		}

		String status_order = (String)attributes.get("status_order");

		if (status_order != null) {
			setStatus_order(status_order);
		}

		String status_pembayaran_keseluruhan = (String)attributes.get(
				"status_pembayaran_keseluruhan");

		if (status_pembayaran_keseluruhan != null) {
			setStatus_pembayaran_keseluruhan(status_pembayaran_keseluruhan);
		}

		String status_pengiriman_keseluruhan = (String)attributes.get(
				"status_pengiriman_keseluruhan");

		if (status_pengiriman_keseluruhan != null) {
			setStatus_pengiriman_keseluruhan(status_pengiriman_keseluruhan);
		}

		String catatan = (String)attributes.get("catatan");

		if (catatan != null) {
			setCatatan(catatan);
		}

		Date create_date = (Date)attributes.get("create_date");

		if (create_date != null) {
			setCreate_date(create_date);
		}

		Date modified_date = (Date)attributes.get("modified_date");

		if (modified_date != null) {
			setModified_date(modified_date);
		}

		String id_metode_pembayaran = (String)attributes.get(
				"id_metode_pembayaran");

		if (id_metode_pembayaran != null) {
			setId_metode_pembayaran(id_metode_pembayaran);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public String getId_order() {
		if (_id_order == null) {
			return "";
		}
		else {
			return _id_order;
		}
	}

	@Override
	public void setId_order(String id_order) {
		_id_order = id_order;
	}

	@JSON
	@Override
	public long getTotal_harga() {
		return _total_harga;
	}

	@Override
	public void setTotal_harga(long total_harga) {
		_total_harga = total_harga;
	}

	@JSON
	@Override
	public Date getTanggal_pemesanan() {
		return _tanggal_pemesanan;
	}

	@Override
	public void setTanggal_pemesanan(Date tanggal_pemesanan) {
		_tanggal_pemesanan = tanggal_pemesanan;
	}

	@JSON
	@Override
	public Date getTanggal_ekspetasi_pengiriman() {
		return _tanggal_ekspetasi_pengiriman;
	}

	@Override
	public void setTanggal_ekspetasi_pengiriman(
		Date tanggal_ekspetasi_pengiriman) {
		_tanggal_ekspetasi_pengiriman = tanggal_ekspetasi_pengiriman;
	}

	@JSON
	@Override
	public String getStatus_order() {
		if (_status_order == null) {
			return "";
		}
		else {
			return _status_order;
		}
	}

	@Override
	public void setStatus_order(String status_order) {
		_status_order = status_order;
	}

	@JSON
	@Override
	public String getStatus_pembayaran_keseluruhan() {
		if (_status_pembayaran_keseluruhan == null) {
			return "";
		}
		else {
			return _status_pembayaran_keseluruhan;
		}
	}

	@Override
	public void setStatus_pembayaran_keseluruhan(
		String status_pembayaran_keseluruhan) {
		_status_pembayaran_keseluruhan = status_pembayaran_keseluruhan;
	}

	@JSON
	@Override
	public String getStatus_pengiriman_keseluruhan() {
		if (_status_pengiriman_keseluruhan == null) {
			return "";
		}
		else {
			return _status_pengiriman_keseluruhan;
		}
	}

	@Override
	public void setStatus_pengiriman_keseluruhan(
		String status_pengiriman_keseluruhan) {
		_status_pengiriman_keseluruhan = status_pengiriman_keseluruhan;
	}

	@JSON
	@Override
	public String getCatatan() {
		if (_catatan == null) {
			return "";
		}
		else {
			return _catatan;
		}
	}

	@Override
	public void setCatatan(String catatan) {
		_catatan = catatan;
	}

	@JSON
	@Override
	public Date getCreate_date() {
		return _create_date;
	}

	@Override
	public void setCreate_date(Date create_date) {
		_create_date = create_date;
	}

	@JSON
	@Override
	public Date getModified_date() {
		return _modified_date;
	}

	@Override
	public void setModified_date(Date modified_date) {
		_modified_date = modified_date;
	}

	@JSON
	@Override
	public String getId_metode_pembayaran() {
		if (_id_metode_pembayaran == null) {
			return "";
		}
		else {
			return _id_metode_pembayaran;
		}
	}

	@Override
	public void setId_metode_pembayaran(String id_metode_pembayaran) {
		_id_metode_pembayaran = id_metode_pembayaran;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public Order toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Order)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		OrderImpl orderImpl = new OrderImpl();

		orderImpl.setUuid(getUuid());
		orderImpl.setId_order(getId_order());
		orderImpl.setTotal_harga(getTotal_harga());
		orderImpl.setTanggal_pemesanan(getTanggal_pemesanan());
		orderImpl.setTanggal_ekspetasi_pengiriman(getTanggal_ekspetasi_pengiriman());
		orderImpl.setStatus_order(getStatus_order());
		orderImpl.setStatus_pembayaran_keseluruhan(getStatus_pembayaran_keseluruhan());
		orderImpl.setStatus_pengiriman_keseluruhan(getStatus_pengiriman_keseluruhan());
		orderImpl.setCatatan(getCatatan());
		orderImpl.setCreate_date(getCreate_date());
		orderImpl.setModified_date(getModified_date());
		orderImpl.setId_metode_pembayaran(getId_metode_pembayaran());

		orderImpl.resetOriginalValues();

		return orderImpl;
	}

	@Override
	public int compareTo(Order order) {
		String primaryKey = order.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Order)) {
			return false;
		}

		Order order = (Order)obj;

		String primaryKey = order.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		OrderModelImpl orderModelImpl = this;

		orderModelImpl._originalUuid = orderModelImpl._uuid;

		orderModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Order> toCacheModel() {
		OrderCacheModel orderCacheModel = new OrderCacheModel();

		orderCacheModel.uuid = getUuid();

		String uuid = orderCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			orderCacheModel.uuid = null;
		}

		orderCacheModel.id_order = getId_order();

		String id_order = orderCacheModel.id_order;

		if ((id_order != null) && (id_order.length() == 0)) {
			orderCacheModel.id_order = null;
		}

		orderCacheModel.total_harga = getTotal_harga();

		Date tanggal_pemesanan = getTanggal_pemesanan();

		if (tanggal_pemesanan != null) {
			orderCacheModel.tanggal_pemesanan = tanggal_pemesanan.getTime();
		}
		else {
			orderCacheModel.tanggal_pemesanan = Long.MIN_VALUE;
		}

		Date tanggal_ekspetasi_pengiriman = getTanggal_ekspetasi_pengiriman();

		if (tanggal_ekspetasi_pengiriman != null) {
			orderCacheModel.tanggal_ekspetasi_pengiriman = tanggal_ekspetasi_pengiriman.getTime();
		}
		else {
			orderCacheModel.tanggal_ekspetasi_pengiriman = Long.MIN_VALUE;
		}

		orderCacheModel.status_order = getStatus_order();

		String status_order = orderCacheModel.status_order;

		if ((status_order != null) && (status_order.length() == 0)) {
			orderCacheModel.status_order = null;
		}

		orderCacheModel.status_pembayaran_keseluruhan = getStatus_pembayaran_keseluruhan();

		String status_pembayaran_keseluruhan = orderCacheModel.status_pembayaran_keseluruhan;

		if ((status_pembayaran_keseluruhan != null) &&
				(status_pembayaran_keseluruhan.length() == 0)) {
			orderCacheModel.status_pembayaran_keseluruhan = null;
		}

		orderCacheModel.status_pengiriman_keseluruhan = getStatus_pengiriman_keseluruhan();

		String status_pengiriman_keseluruhan = orderCacheModel.status_pengiriman_keseluruhan;

		if ((status_pengiriman_keseluruhan != null) &&
				(status_pengiriman_keseluruhan.length() == 0)) {
			orderCacheModel.status_pengiriman_keseluruhan = null;
		}

		orderCacheModel.catatan = getCatatan();

		String catatan = orderCacheModel.catatan;

		if ((catatan != null) && (catatan.length() == 0)) {
			orderCacheModel.catatan = null;
		}

		Date create_date = getCreate_date();

		if (create_date != null) {
			orderCacheModel.create_date = create_date.getTime();
		}
		else {
			orderCacheModel.create_date = Long.MIN_VALUE;
		}

		Date modified_date = getModified_date();

		if (modified_date != null) {
			orderCacheModel.modified_date = modified_date.getTime();
		}
		else {
			orderCacheModel.modified_date = Long.MIN_VALUE;
		}

		orderCacheModel.id_metode_pembayaran = getId_metode_pembayaran();

		String id_metode_pembayaran = orderCacheModel.id_metode_pembayaran;

		if ((id_metode_pembayaran != null) &&
				(id_metode_pembayaran.length() == 0)) {
			orderCacheModel.id_metode_pembayaran = null;
		}

		return orderCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", id_order=");
		sb.append(getId_order());
		sb.append(", total_harga=");
		sb.append(getTotal_harga());
		sb.append(", tanggal_pemesanan=");
		sb.append(getTanggal_pemesanan());
		sb.append(", tanggal_ekspetasi_pengiriman=");
		sb.append(getTanggal_ekspetasi_pengiriman());
		sb.append(", status_order=");
		sb.append(getStatus_order());
		sb.append(", status_pembayaran_keseluruhan=");
		sb.append(getStatus_pembayaran_keseluruhan());
		sb.append(", status_pengiriman_keseluruhan=");
		sb.append(getStatus_pengiriman_keseluruhan());
		sb.append(", catatan=");
		sb.append(getCatatan());
		sb.append(", create_date=");
		sb.append(getCreate_date());
		sb.append(", modified_date=");
		sb.append(getModified_date());
		sb.append(", id_metode_pembayaran=");
		sb.append(getId_metode_pembayaran());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("OrderSvc.model.Order");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id_order</column-name><column-value><![CDATA[");
		sb.append(getId_order());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>total_harga</column-name><column-value><![CDATA[");
		sb.append(getTotal_harga());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tanggal_pemesanan</column-name><column-value><![CDATA[");
		sb.append(getTanggal_pemesanan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tanggal_ekspetasi_pengiriman</column-name><column-value><![CDATA[");
		sb.append(getTanggal_ekspetasi_pengiriman());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status_order</column-name><column-value><![CDATA[");
		sb.append(getStatus_order());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status_pembayaran_keseluruhan</column-name><column-value><![CDATA[");
		sb.append(getStatus_pembayaran_keseluruhan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status_pengiriman_keseluruhan</column-name><column-value><![CDATA[");
		sb.append(getStatus_pengiriman_keseluruhan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>catatan</column-name><column-value><![CDATA[");
		sb.append(getCatatan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>create_date</column-name><column-value><![CDATA[");
		sb.append(getCreate_date());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modified_date</column-name><column-value><![CDATA[");
		sb.append(getModified_date());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id_metode_pembayaran</column-name><column-value><![CDATA[");
		sb.append(getId_metode_pembayaran());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Order.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Order.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private String _id_order;
	private long _total_harga;
	private Date _tanggal_pemesanan;
	private Date _tanggal_ekspetasi_pengiriman;
	private String _status_order;
	private String _status_pembayaran_keseluruhan;
	private String _status_pengiriman_keseluruhan;
	private String _catatan;
	private Date _create_date;
	private Date _modified_date;
	private String _id_metode_pembayaran;
	private long _columnBitmask;
	private Order _escapedModel;
}