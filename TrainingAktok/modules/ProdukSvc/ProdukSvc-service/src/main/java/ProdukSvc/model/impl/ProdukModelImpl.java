/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package ProdukSvc.model.impl;

import ProdukSvc.model.Produk;
import ProdukSvc.model.ProdukModel;
import ProdukSvc.model.ProdukSoap;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Produk service. Represents a row in the &quot;master_Produk&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ProdukModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ProdukImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ProdukImpl
 * @see Produk
 * @see ProdukModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class ProdukModelImpl extends BaseModelImpl<Produk>
	implements ProdukModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a produk model instance should use the {@link Produk} interface instead.
	 */
	public static final String TABLE_NAME = "master_Produk";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "id_produk", Types.VARCHAR },
			{ "create_date", Types.TIMESTAMP },
			{ "modified_date", Types.TIMESTAMP },
			{ "nama_produk", Types.VARCHAR },
			{ "harga_produk", Types.BIGINT },
			{ "kelipatan_produk", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("id_produk", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("create_date", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modified_date", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("nama_produk", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("harga_produk", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("kelipatan_produk", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table master_Produk (uuid_ VARCHAR(75) null,id_produk VARCHAR(75) not null primary key,create_date DATE null,modified_date DATE null,nama_produk VARCHAR(75) null,harga_produk LONG,kelipatan_produk LONG)";
	public static final String TABLE_SQL_DROP = "drop table master_Produk";
	public static final String ORDER_BY_JPQL = " ORDER BY produk.id_produk ASC";
	public static final String ORDER_BY_SQL = " ORDER BY master_Produk.id_produk ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(ProdukSvc.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.ProdukSvc.model.Produk"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(ProdukSvc.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.ProdukSvc.model.Produk"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(ProdukSvc.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.ProdukSvc.model.Produk"),
			true);
	public static final long UUID_COLUMN_BITMASK = 1L;
	public static final long ID_PRODUK_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Produk toModel(ProdukSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Produk model = new ProdukImpl();

		model.setUuid(soapModel.getUuid());
		model.setId_produk(soapModel.getId_produk());
		model.setCreate_date(soapModel.getCreate_date());
		model.setModified_date(soapModel.getModified_date());
		model.setNama_produk(soapModel.getNama_produk());
		model.setHarga_produk(soapModel.getHarga_produk());
		model.setKelipatan_produk(soapModel.getKelipatan_produk());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Produk> toModels(ProdukSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Produk> models = new ArrayList<Produk>(soapModels.length);

		for (ProdukSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(ProdukSvc.service.util.ServiceProps.get(
				"lock.expiration.time.ProdukSvc.model.Produk"));

	public ProdukModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _id_produk;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setId_produk(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id_produk;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return Produk.class;
	}

	@Override
	public String getModelClassName() {
		return Produk.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("id_produk", getId_produk());
		attributes.put("create_date", getCreate_date());
		attributes.put("modified_date", getModified_date());
		attributes.put("nama_produk", getNama_produk());
		attributes.put("harga_produk", getHarga_produk());
		attributes.put("kelipatan_produk", getKelipatan_produk());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		String id_produk = (String)attributes.get("id_produk");

		if (id_produk != null) {
			setId_produk(id_produk);
		}

		Date create_date = (Date)attributes.get("create_date");

		if (create_date != null) {
			setCreate_date(create_date);
		}

		Date modified_date = (Date)attributes.get("modified_date");

		if (modified_date != null) {
			setModified_date(modified_date);
		}

		String nama_produk = (String)attributes.get("nama_produk");

		if (nama_produk != null) {
			setNama_produk(nama_produk);
		}

		Long harga_produk = (Long)attributes.get("harga_produk");

		if (harga_produk != null) {
			setHarga_produk(harga_produk);
		}

		Long kelipatan_produk = (Long)attributes.get("kelipatan_produk");

		if (kelipatan_produk != null) {
			setKelipatan_produk(kelipatan_produk);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public String getId_produk() {
		if (_id_produk == null) {
			return "";
		}
		else {
			return _id_produk;
		}
	}

	@Override
	public void setId_produk(String id_produk) {
		_id_produk = id_produk;
	}

	@JSON
	@Override
	public Date getCreate_date() {
		return _create_date;
	}

	@Override
	public void setCreate_date(Date create_date) {
		_create_date = create_date;
	}

	@JSON
	@Override
	public Date getModified_date() {
		return _modified_date;
	}

	@Override
	public void setModified_date(Date modified_date) {
		_modified_date = modified_date;
	}

	@JSON
	@Override
	public String getNama_produk() {
		if (_nama_produk == null) {
			return "";
		}
		else {
			return _nama_produk;
		}
	}

	@Override
	public void setNama_produk(String nama_produk) {
		_nama_produk = nama_produk;
	}

	@JSON
	@Override
	public long getHarga_produk() {
		return _harga_produk;
	}

	@Override
	public void setHarga_produk(long harga_produk) {
		_harga_produk = harga_produk;
	}

	@JSON
	@Override
	public long getKelipatan_produk() {
		return _kelipatan_produk;
	}

	@Override
	public void setKelipatan_produk(long kelipatan_produk) {
		_kelipatan_produk = kelipatan_produk;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public Produk toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Produk)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ProdukImpl produkImpl = new ProdukImpl();

		produkImpl.setUuid(getUuid());
		produkImpl.setId_produk(getId_produk());
		produkImpl.setCreate_date(getCreate_date());
		produkImpl.setModified_date(getModified_date());
		produkImpl.setNama_produk(getNama_produk());
		produkImpl.setHarga_produk(getHarga_produk());
		produkImpl.setKelipatan_produk(getKelipatan_produk());

		produkImpl.resetOriginalValues();

		return produkImpl;
	}

	@Override
	public int compareTo(Produk produk) {
		String primaryKey = produk.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Produk)) {
			return false;
		}

		Produk produk = (Produk)obj;

		String primaryKey = produk.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		ProdukModelImpl produkModelImpl = this;

		produkModelImpl._originalUuid = produkModelImpl._uuid;

		produkModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Produk> toCacheModel() {
		ProdukCacheModel produkCacheModel = new ProdukCacheModel();

		produkCacheModel.uuid = getUuid();

		String uuid = produkCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			produkCacheModel.uuid = null;
		}

		produkCacheModel.id_produk = getId_produk();

		String id_produk = produkCacheModel.id_produk;

		if ((id_produk != null) && (id_produk.length() == 0)) {
			produkCacheModel.id_produk = null;
		}

		Date create_date = getCreate_date();

		if (create_date != null) {
			produkCacheModel.create_date = create_date.getTime();
		}
		else {
			produkCacheModel.create_date = Long.MIN_VALUE;
		}

		Date modified_date = getModified_date();

		if (modified_date != null) {
			produkCacheModel.modified_date = modified_date.getTime();
		}
		else {
			produkCacheModel.modified_date = Long.MIN_VALUE;
		}

		produkCacheModel.nama_produk = getNama_produk();

		String nama_produk = produkCacheModel.nama_produk;

		if ((nama_produk != null) && (nama_produk.length() == 0)) {
			produkCacheModel.nama_produk = null;
		}

		produkCacheModel.harga_produk = getHarga_produk();

		produkCacheModel.kelipatan_produk = getKelipatan_produk();

		return produkCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", id_produk=");
		sb.append(getId_produk());
		sb.append(", create_date=");
		sb.append(getCreate_date());
		sb.append(", modified_date=");
		sb.append(getModified_date());
		sb.append(", nama_produk=");
		sb.append(getNama_produk());
		sb.append(", harga_produk=");
		sb.append(getHarga_produk());
		sb.append(", kelipatan_produk=");
		sb.append(getKelipatan_produk());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("ProdukSvc.model.Produk");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id_produk</column-name><column-value><![CDATA[");
		sb.append(getId_produk());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>create_date</column-name><column-value><![CDATA[");
		sb.append(getCreate_date());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modified_date</column-name><column-value><![CDATA[");
		sb.append(getModified_date());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nama_produk</column-name><column-value><![CDATA[");
		sb.append(getNama_produk());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>harga_produk</column-name><column-value><![CDATA[");
		sb.append(getHarga_produk());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>kelipatan_produk</column-name><column-value><![CDATA[");
		sb.append(getKelipatan_produk());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Produk.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Produk.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private String _id_produk;
	private Date _create_date;
	private Date _modified_date;
	private String _nama_produk;
	private long _harga_produk;
	private long _kelipatan_produk;
	private long _columnBitmask;
	private Produk _escapedModel;
}